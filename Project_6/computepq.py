#   Show that if φ(N) and N are known, then it is possible
#   to compute p and q efficiently.

#   φ(N) = (p-1)(q-1), N = pq
#   φ(N) = pq - p - q + 1
#   φ(N) = N - p - q + 1
#   q = N - p - phi(N) + 1
#   N/p = N - p - phi(N) + 1
#   N = -p^2 + (N - phi(N) + 1)p
#   0 = -p^2 + (N - phi(N) + 1)p - N
import math

def isqrt(n): # Returns square root of input parameter
    x = n
    y = (x + 1) // 2
    while y < x:
        x = y
        y = (x + n // x) // 2
    return x

def solveQuad(a,b,c): # Solves quadratic with coefficient inputs
    #   calculate the discriminant
    d = (b**2) - (4*a*c)
    #   find two solutions
    sol1 = (-b-isqrt(d))//(2*a)
    sol2 = (-b+isqrt(d))//(2*a)

    # Not likely for our application but we'll include anyway:
    if sol2 > 0 & sol1 > 0: print( "Found more than one p."); return 1
    # Take whichever solution is not negative
    if sol1 > 0: print( "p = ", sol1 ); return sol1
    if sol2 > 0: print( "p = ", sol2 ); return sol2

if __name__ == "__main__":
    N=int("""
    207223154043965088701210756045126564627197934600164356385160399263771929
    991483408993337800744326333103137124134534068872908011827512897157390544
    596397117851242454073619092829540312195768292334791998692595110781482773
    595602219169897575776397522579344394080292332296096534859053608770823602
    964966611853830620470922076915989174277656925726593353119528887412084256
    743778409391376962049150174045041670223051272854509883078794488172348520
    369982870504279948335463394069143911301107892455488608193251819241526996
    491211158743786862171618065746669565843195845506062710797638743027444024
    27213265557318790786231798363244525880467""".replace("\n", ""))

    phiN=int("""
    207223154043965088701210756045126564627197934600164356385160399263771929
    991483408993337800744326333103137124134534068872908011827512897157390544
    596397117851242454073619092829540312195768292334791998692595110781482773
    595602219169897575776397522579344394080292332296096534859053608770823602
    964966611853830620468009690792285362076713801673941032673369520316702623
    305074259327218842599485632260406669720612371578425139758356180720911055
    082483056557587459550582045572353288650857631123389336096043963659327817
    400064870576724820131537945680331366523553997280372523429091908140867101
    58216677046856242470152484190679864786400""".replace("\n", ""))

    #   Solve quadratic 0 = -p^2 + (N - phi(N) + 1)p - N
    p = solveQuad(-1,(N - phiN + 1),-N) #  Solves for p
    #   Solve for q from N = pq
    q = N//p

    print( "q = ", q )

    if(p*q == N):
        print( "Found p and q!")
    else: print("Not quite...")
